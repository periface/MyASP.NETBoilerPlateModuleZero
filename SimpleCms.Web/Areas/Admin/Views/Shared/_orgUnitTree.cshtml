@using SimpleCms.ModuleZero.OrgUnits.Dto
@model SimpleCms.ModuleZero.OrgUnits.Dto.OrganizationUnitOutPut
@{
    Layout = null;
    //Helper for children nesting
    @helper GetChildren(List<OrganizationUnitDto> childs)
    {
var html = "<ol class='dd-list'>";
foreach (var children in childs)
{
    html += "<li class='dd-item dd3-item' data-id=" + children.Id + ">";
    html += "<div class='dd-handle dd3-handle'> Handle";

    html += "</div>";
    html += "<div class='dd3-content'><a  class='usersInUnit' data-id=" + children.Id+">" + children.DisplayName + "</a> <div class='pull-right'><a data-id=" + children.Id+ " class='addChild' >"+L("AddChild")+ " </a> | <a class='convertToRoot' data-id=" + children.Id + " >"+ L("ConvertToRoot")+"</a></div></div>";
    if (children.Children.Any())
    {
        html += GetChildren(children.Children);
    }
    html += "</li>";
}
html += "</ol>";
    @Html.Raw(html);
}
}
<style>
    #nestable3 {
        max-width: none;
    }
</style>
<div class="dd" id="nestable3">
    <ol class="dd-list">
        @foreach (var unit in Model.OrganizationUnisDto.Where(unit => !unit.ParentId.HasValue))
        {
            <li class="dd-item dd3-item" data-id="@unit.Id">
                <div class="dd-handle dd3-handle">
                    Drag
                </div>
                <div class="dd3-content">
                    <a data-id="@unit.Id" class="usersInUnit">@unit.DisplayName</a> 
                    <div class="pull-right">
                        <a class="addChild" data-id="@unit.Id">@L("AddChild") </a> 
                        @if (unit.ParentId.HasValue)
                        {
                            @:|
                            <a class="convertToRoot" data-id="@unit.Id">@L("ConvertToRoot")</a>
                        }
                    </div>
                </div>

                @GetChildren(unit.Children)
            </li>
        }
    </ol>
</div>
